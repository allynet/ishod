# Create a new NPM release when a new tag is created.

name: Create a new NPM release

on:
  push:
    paths-ignore:
      - "*.md"
    branches:
      - main
      - master
    tags:
      - v*
  pull_request:
    paths-ignore:
      - "*.md"
    branches:
      - main
      - master

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Bun"
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: "Install dependencies"
        run: bun install
      - name: "Run lint"
        run: bun run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Bun"
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: "Install dependencies"
        run: bun install
      - name: "Run tests"
        run: bun run test:coverage
      - name: "Upload coverage artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage

  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Bun"
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: "Install dependencies"
        run: bun install
      - name: "Build"
        run: bun run build
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
            LICENSE
            README.md
            package.json

  publish-docs:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    permissions:
      pages: write
      id-token: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Bun"
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: "Install dependencies"
        run: bun install
      - name: "Build docs"
        run: bun run build:docs
      - name: "Upload docs artifacts"
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/html
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    # Only release on tags
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [lint, test, publish-docs, build]
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - name: "Get build artifacts"
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: "Update version"
        run: node update-version.js '${{ github.event.release.tag_name }}'
      - name: "Commit and push version update"
        run: |
          TAG="${{ github.event.release.tag_name }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json
          git commit -m "Update package.json to version $TAG"
          git push origin ${{ github.event.repository.default_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Publish package"
        run: |
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
